/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Interfaz;

import Modelo.Apx;
import java.io.DataOutputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author ncholbic
 */
public class PantallaApx extends javax.swing.JFrame {

    Apx apx;
    String isCritical;
    String responseTimeCritical;
    String timeWindow;
    String volumen;
    String email;
    boolean aniadirLista = true;
    
    
    ArrayList<Apx> listaApx = new ArrayList();

    /**
     * Creates new form SegundaPantalla
     */
    public PantallaApx() {
        initComponents();
        getContentPane().setBackground(new java.awt.Color(191, 225, 248));
       }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelAlarmType = new javax.swing.JLabel();
        textoAlarmType = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        textoRemedyGroup = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel5 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel7 = new javax.swing.JLabel();
        textoServiceOwner = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jComboBoxResponseTimeCritical = new javax.swing.JComboBox<>();
        textoSupportEmail = new javax.swing.JFormattedTextField();
        jLabel10 = new javax.swing.JLabel();
        jComboBoxTimeWindow = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        jComboBoxVolumen = new javax.swing.JComboBox<>();
        botonAniadir = new javax.swing.JButton();
        botonGuardar = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jComboBoxCritical = new javax.swing.JComboBox<>();
        textoSupportPhone = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(204, 255, 255));
        setResizable(false);

        jLabelAlarmType.setText("alarmType");

        textoAlarmType.setText(" ");
        textoAlarmType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textoAlarmTypeActionPerformed(evt);
            }
        });

        jLabel3.setText("remedyGroup");

        textoRemedyGroup.setText(" ");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("Opcional:");

        jLabel5.setText("responseTimeCritical");

        jLabel7.setText("serviceOwner");

        textoServiceOwner.setText(" ");

        jLabel8.setText("supportEmail");

        jLabel9.setText("supportPhone");

        jComboBoxResponseTimeCritical.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "----", "500", "2000", "5000", "10000" }));
        jComboBoxResponseTimeCritical.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxResponseTimeCriticalActionPerformed(evt);
            }
        });

        textoSupportEmail.setText(" ");

        jLabel10.setText("timeWindow");

        jComboBoxTimeWindow.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "----", "24H", "WORK_HOURS", "NON_WORK_HOURS" }));
        jComboBoxTimeWindow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxTimeWindowActionPerformed(evt);
            }
        });

        jLabel11.setText("volumen");

        jComboBoxVolumen.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "----", "ALTO", "MEDIO", "BAJO" }));
        jComboBoxVolumen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxVolumenActionPerformed(evt);
            }
        });

        botonAniadir.setText("AÃ‘ADIR AL DOCUMENTO");
        botonAniadir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAniadirActionPerformed(evt);
            }
        });

        botonGuardar.setText("GUARDAR DOCUMENTO");
        botonGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonGuardarActionPerformed(evt);
            }
        });

        jLabel12.setText("isCritical");

        jComboBoxCritical.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "----", "CRITICO", "NOCRITICO" }));
        jComboBoxCritical.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxCriticalActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator2)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(textoSupportEmail)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(18, 18, 18)
                                .addComponent(textoServiceOwner, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(39, 39, 39)
                                .addComponent(botonAniadir, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(58, 58, 58)
                                .addComponent(botonGuardar))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addGap(40, 40, 40)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jComboBoxVolumen, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(textoSupportPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel10)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jComboBoxTimeWindow, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addContainerGap(21, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabelAlarmType)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textoAlarmType, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(60, 60, 60)
                        .addComponent(jLabel12)
                        .addGap(26, 26, 26)
                        .addComponent(jComboBoxCritical, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(textoRemedyGroup, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18)
                                .addComponent(jComboBoxResponseTimeCritical, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(7, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 497, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelAlarmType)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(textoAlarmType, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel12)
                        .addComponent(jComboBoxCritical, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(textoRemedyGroup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4)
                    .addComponent(jComboBoxResponseTimeCritical, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(textoServiceOwner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(textoSupportEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel9)
                        .addComponent(textoSupportPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel10)
                        .addComponent(jComboBoxTimeWindow, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jComboBoxVolumen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonAniadir, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(16, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(93, 93, 93)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(256, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void textoAlarmTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textoAlarmTypeActionPerformed
//        //jTextFieldAlarmType.getText();
//        System.out.println(textoAlarmType.getText());
//        apx.setAlarmType(textoAlarmType.getText());
    }//GEN-LAST:event_textoAlarmTypeActionPerformed

    private void botonAniadirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAniadirActionPerformed
       
       
        apx = new Apx();
        //ValidaciÃ³n de textoAlarmType
        if (textoAlarmType.getText().length() >= 4) {
            apx.setAlarmType(textoAlarmType.getText());
        } else {
            if (textoAlarmType.getText().trim().isEmpty()) {
                JOptionPane.showMessageDialog(rootPane, "El campo alarmType no puede estar vacÃ­o");
                aniadirLista = false;
            } else {
                JOptionPane.showMessageDialog(rootPane, "El campo alarmType ha de contener al menos 4 caracteres");
                aniadirLista = false;
            }
        }
        //ValidaciÃ³n campo isCritical
        if (isCritical != null) {
            if (isCritical.equals("----")) {
                JOptionPane.showMessageDialog(rootPane, "SelecciÃ³n del campo isCritical no vÃ¡lida");
                aniadirLista = false;
            } else {
                apx.setIsCritical(isCritical);
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Seleccione una opciÃ³n de isCritical");
            aniadirLista = false;
        }

       
        //apx.setErrorRateWarn(errorRateWarn);
        //ValidaciÃ³n de textoRemedyGroup
        if (textoRemedyGroup.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "El campo remedyGroup no puede estar vacÃ­o");
            aniadirLista = false;
        } else {
            apx.setRemedyGroup(textoRemedyGroup.getText());
        }

        apx.setResponseTimeCritical(responseTimeCritical);
        

        //ValidaciÃ³n de textoServiceOwner
        if (textoServiceOwner.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "El campo textoServiceOwner no puede estar vacÃ­o");
            aniadirLista = false;
        } else {
            apx.setServiceOwner(textoServiceOwner.getText());            
        }

        //ValidaciÃ³n de textoSupportEmail
        email = textoSupportEmail.getText();
        //System.out.println(email);
        String EMAIL_PATTERN = "^[_A-Za-z0-9-\\+]+(\\.[_A-Za-z0-9-]+)*@[A-Za-z0-9-]+(\\.[A-Za-z0-9]+)*(\\.[A-Za-z]{2,})$";
        boolean resultado = email.trim().matches(EMAIL_PATTERN);
        //System.out.println(resultado);
        if (resultado == true) {
            apx.setSupportEmail(email);
        } else {
            JOptionPane.showMessageDialog(rootPane, "Introduzca un formato de email vÃ¡lido");
            aniadirLista = false;
        }

        //ValidaciÃ³n de mÃ³vil
        //Primero validamos la longitud del num telefono
        if (textoSupportPhone.getText().trim().length() != 9) { //pongo que sea 11 el length porque con el formato que he introducido, pone que son 11 dÃ­gitos 
            //el telÃ©fono y no 9 (por dos espacios, que no me quita aunque use el mÃ©todo trim()          
            JOptionPane.showMessageDialog(rootPane, "Introduzca nueve dÃ­gitos, por favor");
            aniadirLista = false;
        }

        //Ahora validamos que empiece por 6 o 7
        boolean empiezaSeis = textoSupportPhone.getText().startsWith("6");
        boolean empiezaSiete = textoSupportPhone.getText().startsWith("7");
        if (empiezaSeis == false && empiezaSiete == false) {
            JOptionPane.showMessageDialog(rootPane, "Introduzca un formato de telÃ©fono vÃ¡lido");
            aniadirLista = false;
        } else {
            apx.setSupportPhone(textoSupportPhone.getText());
        }

        //ValidaciÃ³n de timeWindow
        if (timeWindow != null) {
            if (timeWindow.equals("----")) {
                JOptionPane.showMessageDialog(rootPane, "SelecciÃ³n del campo timeWindow no vÃ¡lida");
                aniadirLista = false;
            } else {
                apx.setTimeWindow(timeWindow);
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Seleccione una opciÃ³n de timeWindow");
            aniadirLista = false;
        }

        //ValidaciÃ³n de volumen
        if (volumen != null) {
            if (volumen.equals("----")) {
                JOptionPane.showMessageDialog(rootPane, "SelecciÃ³n del campo volumen no vÃ¡lida");
                aniadirLista = false;
            } else {
                apx.setVolumen(volumen);
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Seleccione una opciÃ³n de volumen");
            aniadirLista = false;
        }
        
        
        if (aniadirLista == true) {
            listaApx.add(apx);

            //Ahora hacemos un reset de todos los valores para poder aÃ±adir mÃ¡s
            textoAlarmType.setText("");
            jComboBoxCritical.setSelectedItem("----");
            textoRemedyGroup.setText("");
            jComboBoxResponseTimeCritical.setSelectedItem("----");
            textoServiceOwner.setText("");
            textoSupportEmail.setText("");
            textoSupportPhone.setText("");
            jComboBoxTimeWindow.setSelectedItem("----");
            jComboBoxVolumen.setSelectedItem("----");
            //apx = new Apx();            
        }
//        jComboBoxResponseTimeCritical.setSelectedItem("----");
//       jComboBoxCritical.setSelectedItem("----");
        aniadirLista = true;
        
        
    }//GEN-LAST:event_botonAniadirActionPerformed

    private void jComboBoxResponseTimeCriticalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxResponseTimeCriticalActionPerformed
        responseTimeCritical = jComboBoxResponseTimeCritical.getSelectedItem().toString();
    }//GEN-LAST:event_jComboBoxResponseTimeCriticalActionPerformed

    private void jComboBoxTimeWindowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxTimeWindowActionPerformed
        timeWindow = jComboBoxTimeWindow.getSelectedItem().toString();

    }//GEN-LAST:event_jComboBoxTimeWindowActionPerformed

    private void jComboBoxVolumenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxVolumenActionPerformed
        volumen = jComboBoxVolumen.getSelectedItem().toString();
    }//GEN-LAST:event_jComboBoxVolumenActionPerformed

    private void botonGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonGuardarActionPerformed
        FileOutputStream fichero = null;
        try {
            //JsonMapper jsonMapper = new JsonMapper();
            Calendar cal = Calendar.getInstance();
            Date fecha = cal.getTime();
            //System.out.println(fecha);
            SimpleDateFormat format = new SimpleDateFormat("dd-MM-yyyy HH_mm_ss");
            String nombre = "Stacker " + format.format(fecha) + ".json";
            System.out.println(nombre);
            fichero = new FileOutputStream(nombre);
            DataOutputStream escribir = new DataOutputStream(fichero);
//            escribir.writeBytes("prueba \n");
//            escribir.writeBytes("prueba prueba dos \n");
//            File fichero = new File("apx.json");
//            FileWriter fw = new FileWriter(fichero, true);
//            BufferedWriter bw = new BufferedWriter(fw);
//            FileReader fr = new FileReader(fichero);
//            BufferedReader br = new BufferedReader(fr);
//            bw.append("prueba");
//            bw.write("prueba otra");
//
            for (int i = 0; i < listaApx.size(); i++) {
                //System.out.println(listaApx.get(i).toString());
                if (i == 0) {
                    //fw.append("[");
                    escribir.writeBytes("[");
                }
                escribir.writeBytes(listaApx.get(i).toString());
                //jsonMapper.writeValue(fichero, listaApx.get(i).toString());
                if (i == listaApx.size() - 1) {
                    escribir.writeBytes("]");
                } else {
                    escribir.writeBytes(", \n");
                }
               //                                
//                jsonMapper.writeValue(fichero, apx.toString());
//RECORRER TODOS LOS ITEMS DEL ARRAY Y ESCRIBIR EL FICHERO DE UNA
            } JOptionPane.showMessageDialog(rootPane, "Archivo guardado correctamente. Puede aÃ±adir mÃ¡s lÃ­neas al documento o cerrar el programa.");
        } catch (FileNotFoundException ex) {
            Logger.getLogger(PantallaApx.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(PantallaApx.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_botonGuardarActionPerformed

    private void jComboBoxCriticalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxCriticalActionPerformed
        isCritical = jComboBoxCritical.getSelectedItem().toString();
    }//GEN-LAST:event_jComboBoxCriticalActionPerformed
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
       /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PantallaApx().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonAniadir;
    private javax.swing.JButton botonGuardar;
    private javax.swing.JComboBox<String> jComboBoxCritical;
    private javax.swing.JComboBox<String> jComboBoxResponseTimeCritical;
    private javax.swing.JComboBox<String> jComboBoxTimeWindow;
    private javax.swing.JComboBox<String> jComboBoxVolumen;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelAlarmType;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextField textoAlarmType;
    private javax.swing.JTextField textoRemedyGroup;
    private javax.swing.JTextField textoServiceOwner;
    private javax.swing.JFormattedTextField textoSupportEmail;
    private javax.swing.JTextField textoSupportPhone;
    // End of variables declaration//GEN-END:variables
}
